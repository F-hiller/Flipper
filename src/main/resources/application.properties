spring.application.name=flipper

# ???? SQL? ?? ?? ?? (???)
spring.jpa.show-sql=true

# Hibernate JPA ??
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# PostgreSQL ??
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# MongoDB ??
#spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}

# Redis ??
#spring.data.redis.url=redis://${SPRING_REDIS_HOST}:${SPRING_REDIS_PORT}

# Kafka ??
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

logging.level.org.apache.kafka.clients.producer=ERROR
logging.level.org.apache.kafka.clients.consumer=ERROR
