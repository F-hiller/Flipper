version: '3'
services:
  # Postgre Database
  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: ${POSTGRES_CONTAINER_NAME}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_VOLUME}
    networks:
      - springboot-network

  # MongoDB
  mongodb:
    image: ${MONGO_IMAGE}
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - ${MONGO_CONFIG}
      - ${MONGO_VOLUME}
    command: mongod --config /etc/mongod.conf

  # Redis
  redis:
    image: ${REDIS_IMAGE}
    container_name: ${REDIS_CONTAINER_NAME}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ${REDIS_VOLUME}
    environment:
      - DOCKER_REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "$DOCKER_REDIS_PASSWORD"]

  # Zookeeper
  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    container_name: ${ZOOKEEPER_CONTAINER_NAME}
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}"

  # Kafka
  kafka:
    image: ${KAFKA_IMAGE}
    container_name: ${KAFKA_CONTAINER_NAME}
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    volumes:
      - ${KAFKA_VOLUME}

networks:
  springboot-network:
    driver: bridge